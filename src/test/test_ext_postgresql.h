/*
   +----------------------------------------------------------------------+
   | HipHop for PHP                                                       |
   +----------------------------------------------------------------------+
   | Copyright (c) 2010 Facebook, Inc. (http://www.facebook.com)          |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
   | available through the world-wide-web at the following url:           |
   | http://www.php.net/license/3_01.txt                                  |
   | If you did not receive a copy of the PHP license and are unable to   |
   | obtain it through the world-wide-web, please send a note to          |
   | license@php.net so we can mail you a copy immediately.               |
   +----------------------------------------------------------------------+
*/

#ifndef __TEST_EXT_POSTGRESQL_H__
#define __TEST_EXT_POSTGRESQL_H__

// >>>>>> Generated by idl.php. Do NOT modify. <<<<<<

#include <test/test_cpp_ext.h>

///////////////////////////////////////////////////////////////////////////////

class TestExtPostgresql : public TestCppExt {
 public:
  virtual bool RunTests(const std::string &which);

  bool test_pg_affected_rows();
  bool test_pg_cancel_query();
  bool test_pg_client_encoding();
  bool test_pg_close();
  bool test_pg_connect();
  bool test_pg_connection_busy();
  bool test_pg_connection_reset();
  bool test_pg_connection_status();
  bool test_pg_convert();
  bool test_pg_copy_from();
  bool test_pg_copy_to();
  bool test_pg_dbname();
  bool test_pg_delete();
  bool test_pg_end_copy();
  bool test_pg_escape_bytea();
  bool test_pg_escape_string();
  bool test_pg_execute();
  bool test_pg_fetch_all_columns();
  bool test_pg_fetch_all();
  bool test_pg_fetch_array();
  bool test_pg_fetch_assoc();
  bool test_pg_fetch_object();
  bool test_pg_fetch_result();
  bool test_pg_fetch_row();
  bool test_pg_field_is_null();
  bool test_pg_field_name();
  bool test_pg_field_num();
  bool test_pg_field_prtlen();
  bool test_pg_field_size();
  bool test_pg_field_table();
  bool test_pg_field_type_oid();
  bool test_pg_field_type();
  bool test_pg_free_result();
  bool test_pg_get_notify();
  bool test_pg_get_pid();
  bool test_pg_get_result();
  bool test_pg_host();
  bool test_pg_insert();
  bool test_pg_last_error();
  bool test_pg_last_notice();
  bool test_pg_last_oid();
  bool test_pg_lo_close();
  bool test_pg_lo_create();
  bool test_pg_lo_export();
  bool test_pg_lo_import();
  bool test_pg_lo_open();
  bool test_pg_lo_read_all();
  bool test_pg_lo_read();
  bool test_pg_lo_seek();
  bool test_pg_lo_tell();
  bool test_pg_lo_unlink();
  bool test_pg_lo_write();
  bool test_pg_meta_data();
  bool test_pg_num_fields();
  bool test_pg_num_rows();
  bool test_pg_options();
  bool test_pg_parameter_status();
  bool test_pg_pconnect();
  bool test_pg_ping();
  bool test_pg_port();
  bool test_pg_prepare();
  bool test_pg_put_line();
  bool test_pg_query_params();
  bool test_pg_query();
  bool test_pg_result_error_field();
  bool test_pg_result_error();
  bool test_pg_result_seek();
  bool test_pg_result_status();
  bool test_pg_select();
  bool test_pg_send_execute();
  bool test_pg_send_prepare();
  bool test_pg_send_query_params();
  bool test_pg_send_query();
  bool test_pg_set_client_encoding();
  bool test_pg_set_error_verbosity();
  bool test_pg_trace();
  bool test_pg_transaction_status();
  bool test_pg_tty();
  bool test_pg_unescape_bytea();
  bool test_pg_untrace();
  bool test_pg_update();
  bool test_pg_version();
};

///////////////////////////////////////////////////////////////////////////////

#endif // __TEST_EXT_POSTGRESQL_H__
